#Створення словника
students={
    "Гиренко Ілля Романович":{
        'Група': "КН41/1",
        'Курс':1,
        'Предмети та оцінки за семестр':{
            "Вища математика":80,
            "Програмування":81,
            "Дискретна математика":85
        }
    },
    "Мартиненко Олександр Володимирович":{
            'Група': "КН41/1",
            'Курс':1,
            'Предмети та оцінки за семестр':{
                "Вища математика":83,
                "Програмування":82,
                "Дискретна математика":84
            }
        },
    "Репін Данііл Вікторович":{
            'Група': "КН41/1",
            'Курс':1,
            'Предмети та оцінки за семестр':{
                "Вища математика":89,
                "Програмування":80,
                "Дискретна математика":87
            }
        },
    "Спічаков Павло Ігорович":{
            'Група': "КН41/1",
            'Курс':1,
            'Предмети та оцінки за семестр':{
                "Вища математика":80,
                "Програмування":90,
                "Дискретна математика":82
            }
        }
}

#Функція Гиренка І. Р.
#Додавання нового студента до словника
def add_student(students):
    # Запитуємо базову інформацію
    name = input("Введіть повне ім'я нового студента: ")
    group = input("Введіть групу студента: ")
    course = int(input("Введіть курс студента: "))
    # Створюємо порожній словник для предметів
    subjects = {}
    print("\nВведіть предмети та оцінки за семестр (для завершення введення введіть порожню назву)\n")
    # Організовуємо цикл для введення предметів
    while True:
        subject = input("Назва предмета: ")
        # Перевірка на пустий рядок для виходу з циклу
        if subject == "":
            break
        try:
            # Пробуємо перетворити введену оцінку на число
            grade = int(input(f"Оцінка з предмета '{subject}': "))
        except ValueError:
            # Обробка помилки, якщо введено не число
            print("Будь ласка, введіть числове значення оцінки.")
            continue  # Повертаємось на початок циклу
        # Додаємо предмет та оцінку до словника 'subjects'
        subjects[subject] = grade
    # Додаємо нового студента у загальний словник 'students'
    students[name] = {
        "Група": group,
        "Курс": course,
        "Предмети та оцінки за семестр": subjects
    }
    print(f"Студента {name} успішно додано!\n")
add_student(students)

#функція Репіна Д. В.
#Редагування оцінок студента
def edit_student_grade(students):
    # Запитуємо ім'я студента для пошуку
    name = input("Введіть повне ім'я студента для редагування: ")
    # Перевіряємо, чи є студент у базі
    if name in students:
        print("Поточні оцінки:")
        # Виводимо поточні предмети та оцінки для зручності
        for subj, grade in students[name]["Предмети та оцінки за семестр"].items():
            print(f"{subj}: {grade}")
        subject = input("Введіть предмет, який потрібно змінити: ")
        # Перевіряємо, чи є такий предмет у студента
        if subject in students[name]["Предмети та оцінки за семестр"]:
            try:
                # Запитуємо нову оцінку та оновлюємо її
                new_grade = int(input("Нова оцінка: "))
                students[name]["Предмети та оцінки за семестр"][subject] = new_grade
                print("Оцінку успішно змінено!")
            except ValueError:
                print("Помилка: оцінка має бути числом.")
        else:
            print("Такого предмета немає.")
    else:
        print("Студента не знайдено.")

edit_student_grade(students)

#функція Спічаков П.І.
#видалення студентів зі списку
def delete_student(students):
    name = input("Введіть повне ім'я студента для видалення: ")
    # Перевіряємо наявність студента у словнику
    if name in students:
        # Використовуємо 'del' для видалення пари ключ-значення
        del students[name]
        print(f"Студента {name} успішно видалено.")
    else:
        # Обробка, якщо ім'я не знайдено
        print("Студента не знайдено.")
delete_student(students)

#функція Мартиненка О.В.
#Пошук студента з найвищим середнім балом
def find_top_student(students):
    # Ініціалізуємо змінні для зберігання найкращого результату
    best_student = None
    best_avg = 0
    # Проходимо по кожному студенту та його даних
    for name, info in students.items():
        grades_dict = info["Предмети та оцінки за семестр"]
        # Перевіряємо, чи є у студента оцінки, щоб уникнути ділення на нуль
        if grades_dict:
            grades = grades_dict.values()
            avg = sum(grades) / len(grades)
            # Якщо середній бал поточного студента вищий, оновлюємо "рекорд"
            if avg > best_avg:
                best_avg = avg
                best_student = name
    # Виводимо результат
    if best_student:
        print(f"\nНайвищий середній бал має студент: {best_student} ({best_avg:.2f})")
    else:
        print("Немає даних про оцінки.")
find_top_student(students)
